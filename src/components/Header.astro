---
import allLinks from "../content/links";
import WavingHand from "../icons/WavingHand.astro";
import A from "./A.astro";
import Heading from "./Heading.astro";
interface Props {
	showSubtitle?: boolean;
	showLinks?: boolean;
	noHeaderBackground?: boolean;
	class?: string;
}
const {
	showSubtitle = false,
	showLinks = false,
	class: extraClasses,
	noHeaderBackground = false,
} = Astro.props;
const possibleSubtitles = [
	"A software developer.",
	"A dad.",
	"A grump.",
	"An enjoyer of simple things.",
	"carter.works? I sure hope he does!",
	"A sepia tone enthusiast.",
	"A crust eaten in peace is better than a banquet partaken in anxiety.",
];
const links = allLinks.filter((link) => !link.isExternal);
---

<script defer define:vars={{ possibleSubtitles }}>
	function randomSubtitle() {
		const $headingSubtitle = document.getElementById("heading-subtitle");
		if (!$headingSubtitle) {
			return;
		}
		const subtitle =
			possibleSubtitles[Math.floor(Math.random() * possibleSubtitles.length)];
		$headingSubtitle.textContent = subtitle;
	}
	randomSubtitle();
</script>
<header
	class:list={[
		"flex",
		"justify-between",
		"md:sticky",
		"top-0",
		"z-10",
		"!max-w-full",
		"!m-0",
		"py-4",
		!noHeaderBackground && "bg-noise",
		!noHeaderBackground && "bg-[size:30%]",
		!noHeaderBackground && "bg-sepia/80",
		!noHeaderBackground && "dark:bg-blackish/80",
		extraClasses,
	]}
>
	<hgroup>
		<A href="/" underline={false}>
			<Heading level={1}>
				Well-Read Woman
			</Heading>
			<p id="heading-subtitle">
üì¢ Women‚Äôs literacy advocate
<br>
‚ù§Ô∏è Book lover, J.D., Ph.D. Candidate
			</p>

		</A>
	</hgroup>
	{
		showLinks && links.length > 0 && (
			<nav>
				<ul class="flex flex-row gap-2">
					{links.map((link) => (
						<li>
							<A {...link.attrs}>{link.text}</A>
						</li>
					))}
				</ul>
			</nav>
		)
	}
</header>
